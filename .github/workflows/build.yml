name: C++ Multi-Plattform-Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            arch: x64
            artifact_suffix: win-x64
            output_name: xbullet.dll
            cmake_params: '-A x64'

          - os: ubuntu-latest
            arch: x86_64
            artifact_suffix: linux-x64
            output_name: libxbullet.so
            cmake_params: ''

          - os: ubuntu-latest
            arch: aarch64
            artifact_suffix: linux-aarch64
            output_name: libxbullet.so
            cmake_params: '-DCMAKE_TOOLCHAIN_FILE=aarch64-linux-gnu.toolchain.cmake'

          - os: macos-14
            arch: x86_64
            artifact_suffix: mac-x64
            output_name: libxbullet.dylib
            cmake_params: '-DCMAKE_OSX_ARCHITECTURES=x86_64'

          - os: macos-14
            arch: aarch64
            artifact_suffix: mac-aarch64
            output_name: libxbullet.dylib
            cmake_params: '-DCMAKE_OSX_ARCHITECTURES=arm64'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Linux aarch64 Cross-Compiler and Toolchain (only Linux aarch64)
        if: matrix.arch == 'aarch64' && runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y g++-aarch64-linux-gnu
          echo "set(CMAKE_SYSTEM_NAME Linux)" > aarch64-linux-gnu.toolchain.cmake
          echo "set(CMAKE_SYSTEM_PROCESSOR aarch64)" >> aarch64-linux-gnu.toolchain.cmake
          echo "set(CMAKE_C_COMPILER aarch64-linux-gnu-gcc)" >> aarch64-linux-gnu.toolchain.cmake
          echo "set(CMAKE_CXX_COMPILER aarch64-linux-gnu-g++)" >> aarch64-linux-gnu.toolchain.cmake

      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release ${{ matrix.cmake_params }}

      - name: Build Project
        run: cmake --build build --config Release

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: xbullet-${{ matrix.artifact_suffix }}
          path: |
            build/${{ matrix.output_name }}
            build/Release/${{ matrix.output_name }}
